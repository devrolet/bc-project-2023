04/26/2023____________________________________________

BLOCK
Set up the overall blockchain application.

Created the basic building block of the blockchain - with blocks themselves!

Started a test-driven development approach to the project.

Built the genesis block - to get the blockchain going.

Added functionality to mine a block - create a new block for the blockchain.

Developed the important sha-256 hash function.

Applied the hash to mine a block.

BLOCKCHAIN

Created the fundamental blockchain class.

Developed functionality to validate the blockchain, to allow for chain replacement.

Implemented chain replacement.

Investigated stubbing console output in tests to keep the output clean.

04/27/2023_______________________________________________________________________________

PROOF OF WORK

Implemented the proof of work system by adding a difficulty and nonce value to each block.

Adjusted the difficulty for a block to ensure that blocks are mined at a rate which approaches a set mining rate for the system.

Investigated the proof of work system by writing a script which checked how will the dynamic difficulty adjusted the system to approach the mine rate.

Switched the hexadecimal character-based difficulty criteria to a more fine-grained binary bit-based difficulty criteria.

Prevented a potential difficulty jump attack by adding extra validation for the blockchain.

API and NETWORK 

Set up an express API to allow for interaction to the backend through HTTP requests.

Created a GET request to read the blockchain.

Added a POST request to write new blocks to the blockchain.

Implemented a real-time messaging network through Redis or PubNub.

Added the ability to broadcast chains.

Started peers through alternate ports, and broadcasted chains when blocks were mined through the api.

Synchronized chains when new peers connected to the network.

Optimized the implementation to avoid redundant interaction.

04/27/2023-03/26/2025_______________________________________________________________________________

I been bullshitting because I started a job on 05/01/2023. That ended and I somehow rediscovered this gem.

I'm going to see it through

03/26/2025_______________________________________________________________________________

Add the ability to check validity of transactions by checking well-formed transactions while also invalidating fraudulent transactions

Added functionality for wallets to create transactions

Able to update transactions with multiple outputs

Improved the CryptoHash and SHA256 

Addressed Update transaction edge cases where amounts are subtracted from the sender and added to the recipient

Added transaction updates to API

03/27/2025 & 03/28/2025_______________________________________________________________________________

Created the core transaction miner class to capture how miners should add transactions to the blockchain.

Added the ability to grab valid transactions from the transaction pool.

Added a way to clear blockchain transactions to ensure that only unique transaction objects could be recorded.

Added a mining transactions endpoint to enable transaction mining through the API.

Cleared recorded transactions on a successful replacement of the blockchain.

Calculated the wallet balance based on the blockchain history.

Applied these wallet balances whenever conducting a new transaction.

Exposed the wallet information including the public key and balance through the API.

Validated transaction data incoming into the blockchain.

Validated incoming transaction input balances.

Prevented duplicate transactions from appearing in a blockâ€™s data.

Validated the entire transaction itself when accepting new user-contributed blockchains.

03/28/2025_______________________________________________________________________________

BACKEND FUNCTIONALITY COMPLETE!!